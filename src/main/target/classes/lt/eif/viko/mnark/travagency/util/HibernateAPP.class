//
// Source code recreated from a .class file by IntelliJ IDEA
// (powered by FernFlower decompiler)
//

package lt.eif.viko.mdanys.travelagency;

import java.util.List;
import lt.eif.viko.mdanys.travelagency.model.Order;
import lt.eif.viko.mdanys.travelagency.model.Traveler;
import lt.eif.viko.mdanys.travelagency.model.Trip;
import lt.eif.viko.mdanys.travelagency.util.HibernateUtil;
import lt.eif.viko.mdanys.travelagency.util.JaxbUtil;
import org.hibernate.Session;
import org.hibernate.Transaction;

public class HibernateApp {
    public HibernateApp() {
    }

    public static void main(String[] args) {
        Trip trip1 = new Trip("EgyptTour", "Pyramids", "Egypt", "2 weeks", 1000);
        Traveler traveler1 = new Traveler("John", "Smith");
        Order order1 = new Order("2023", List.of(traveler1), List.of(trip1));
        Transaction transaction = null;

        Session session;
        try {
            session = HibernateUtil.getSessionFactory().openSession();

            try {
                transaction = session.beginTransaction();
                session.save(order1);
                transaction.commit();
            } catch (Throwable var21) {
                if (session != null) {
                    try {
                        session.close();
                    } catch (Throwable var17) {
                        var21.addSuppressed(var17);
                    }
                }

                throw var21;
            }

            if (session != null) {
                session.close();
            }
        } catch (Exception var22) {
            if (transaction != null) {
                transaction.rollback();
            }

            var22.printStackTrace();
        }

        try {
            try {
                session = HibernateUtil.getSessionFactory().openSession();

                try {
                    List<Order> orders = session.createQuery("from Order", Order.class).list();
                    orders.forEach((ordr) -> {
                        System.out.println();
                    });
                    System.out.println("---------------------------------");
                    orders.forEach((ordr) -> {
                        JaxbUtil.convertToXML(ordr);
                    });
                    System.in.read();
                } catch (Throwable var18) {
                    if (session != null) {
                        try {
                            session.close();
                        } catch (Throwable var16) {
                            var18.addSuppressed(var16);
                        }
                    }

                    throw var18;
                }

                if (session != null) {
                    session.close();
                }
            } catch (Exception var19) {
                if (transaction != null) {
                    System.out.println(var19.getMessage());
                    transaction.rollback();
                }

                var19.printStackTrace();
            }

        } finally {
            ;
        }
    }
}
